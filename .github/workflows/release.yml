name: Deploy release

on:
  push:
    branches: [ release/beta ]
  pull_request:
    branches: [ release/beta ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build | Lint
        run: cargo clippy

  compile-x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run build for x86_64-unknown-linux-gnu arch
        run: cargo build --release

      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-unknown-linux-gnu_binary
          path: target/release/exp
          if-no-files-found: error

  compile-x86_64-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add target for x86_64-windows target
        run: rustup toolchain install stable-x86_64-pc-windows-gnu

      - name: Update apt
        run: sudo apt update

      - name: Add mingw64 for cross linking
        run: sudo apt install -y g++-mingw-w64-x86-64

      - name: Add target to rustup
        run: rustup target add x86_64-pc-windows-gnu

      - name: Run build for x86_64-windows arch
        run: cargo build --release --target x86_64-pc-windows-gnu

      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-windows_binary
          path: target/x86_64-pc-windows-gnu/release/exp.exe
          if-no-files-found: error


  compile-all-apple-darwin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Update apt
        run: sudo apt update

      - name: Add dependency for cross-compiler
        run: sudo apt install -y libssl-dev cmake clang llvm-dev lzma-dev libxml2-dev

      - name: Add target to rustup
        run: rustup target add x86_64-apple-darwin

      - name: Add target to rustup
        run: rustup target add aarch64-apple-darwin

      - uses: mbround18/setup-osxcross@v1
        with:
          osx-version: "12.3"

      - name: Build for apple-darwin arch
        run: cargo build --release --target x86_64-apple-darwin

      - name: Build for apple-darwin arm arch
        run: cargo build --release --target aarch64-apple-darwin

      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-apple-darwin_binary
          path: target/x86_64-apple-darwin/release/exp
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: aarch64-apple-darwin_binary
          path: target/aarch64-apple-darwin/release/exp
          if-no-files-found: error

  release:
    needs: [lint, compile-x86_64-unknown-linux-gnu, compile-x86_64-windows, compile-all-apple-darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          #excludeTagsRegex: "*-beta"
          output: CHANGELOG.md

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-apple-darwin_binary

      - name: Move binary into folder
        run: mkdir x86_64-apple-darwin && mv exp ./x86_64-apple-darwin/exp
      - name: Compress file
        run: tar -czvf x86_64-apple-darwin.tar.gz ./x86_64-apple-darwin

      - uses: actions/download-artifact@v3
        with:
          name: aarch64-apple-darwin_binary

      - name: Move binary into folder
        run: mkdir aarch64-apple-darwin && mv exp ./aarch64-apple-darwin/exp
      - name: Compress file
        run: tar -czvf aarch64-apple-darwin.tar.gz ./aarch64-apple-darwin

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-windows_binary

      - name: Move binary into folder
        run: mkdir x86_64-windows && mv exp.exe ./x86_64-windows/exp.exe
      - name: Compress file
        run: tar -czvf x86_64-windows.tar.gz ./x86_64-windows

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu_binary

      - name: Move binary into folder
        run: mkdir x86_64-unknown-linux-gnu && mv exp ./x86_64-unknown-linux-gnu/exp
      - name: Compress file
        run: tar -czvf x86_64-unknown-linux-gnu.tar.gz ./x86_64-unknown-linux-gnu

      # Get version from binary
      - name: version
        run: sudo chmod 777 ./x86_64-unknown-linux-gnu/exp && echo "version=$(./x86_64-unknown-linux-gnu/exp --version)-beta" >> $GITHUB_OUTPUT
        id: version

      - name: Create tag based on version
        uses: laputansoft/github-tag-action@v4.6
        with:
          github_token: ${{ env.github-token }}
          tag: ${{ steps.version.outputs.version }}

      # Create release
      - name: create_release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: true
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-apple-darwin.tar.gz
          asset_name: x86_64-apple-darwin.tar.gz
          asset_content_type: application/gzip

      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-windows.tar.gz
          asset_name: x86_64-windows.tar.gz
          asset_content_type: application/gzip

      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-unknown-linux-gnu.tar.gz
          asset_name: x86_64-unknown-linux-gnu.tar.gz
          asset_content_type: application/gzip

      - name: upload darwin arm artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aarch64-apple-darwin.tar.gz
          asset_name: aarch64-apple-darwin.tar.gz
          asset_content_type: application/gzip

